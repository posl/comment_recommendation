问题陈述
在一个编程比赛的资格赛中，有N个参赛者。  所有参赛者都得到了不同的名次。
给你一个长度为N的字符串S，它代表参赛者是否想参加决赛。  具体来说
如果S的第i个字符是o，那么在资格赛中排名第i的选手想参加决赛；
如果S的第i个字符是x，则在资格赛中排名第i的选手不想参加决赛。
在想参加决赛的选手中，排名最小的K位选手晋级决赛。
打印一个长度为N的字符串T，满足以下条件：
如果在资格赛中排名第i的选手晋级决赛，则T的第i个字符为o；
如果在资格赛中排名第i位的选手没有进入决赛，则T的第i个字符是x。

限制条件
N和K是整数。
1 ≦ K ≦ N ≦ 100
S是一个长度为N的字符串，由o和x组成。
S至少有K个o。

输入
输入是由标准输入给出的，格式如下：
N K
S

输出
打印答案。

输入样本 1
10 3
oxxoxooxox

样本输出1
oxxoxoxxxx
在这个输入中，N=10人参加了资格赛，其中K=3人晋级决赛。
在资格赛中排名第1的参赛者想参加决赛，所以该参赛者晋级决赛。  到目前为止有1名参赛者晋级。
在资格赛中排名第2和第3的参赛者不想参加决赛，所以他们没有晋级决赛。
在资格赛中排名第4的参赛者希望参加决赛，因此该参赛者晋级决赛。  到目前为止有2名参赛者晋级。
在资格赛中排名第5的参赛者不想参加决赛，所以该参赛者不晋级决赛。
在资格赛中排名第6的参赛者希望参加决赛，因此该参赛者晋级决赛。  到目前为止，已有3名参赛者晋级。
现在有3人晋级决赛，没有排名第7或更低的参赛者晋级决赛。
