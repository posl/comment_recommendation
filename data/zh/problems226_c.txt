问题陈述
高桥是一个武术家。
一个武术家可以学习N个动作，称为动作1，2，...，N。
对于每一个1 ≦ i ≦ N，学习动作i需要T_i分钟的练习。
此外，在练习开始时，所有的动作A_{i,1}, A_{i,2}, ..., A_{i,K_i}必须已经学会。
在此，保证A_{i,j}在每一个1≦j的情况下，A_{i,j}<i。< i，对于每个1 ≦ j ≦ K_i。
高桥在时间0时还没有学会任何棋步。
他不能同时练习一个以上的棋步，也不能停止他已经开始的练习。
求高桥学会第N步棋所需的最少分钟数。

限制条件
1 ≦ N ≦ 2× 10^5
1 ≦ T_i ≦ 10^9
0 ≦ K_i < i
1 ≦ A_{i,j}< i
sum_{i=1}^N K_i ≦ 2× 10^5
A_{i,1}, A_{i,2}, ..., A_{i,K_i}都是独立的。
输入的所有数值都是整数。

输入
输入是由标准输入给出的，格式如下：
N
T_1 K_1 A_{1,1} A_{1,2} ...A_{1,K_1}
T_2 K_2 A_{2,1} A_{2,2} ...A_{2,K_2}
.
.
.
T_N K_N A_{N,1} A_{N,2} ...A_{N,K_N}

输出
打印高桥学习Move N所需的最少分钟数。

样本输入1
3
3 0
5 1 1
7 1 1

样本输出1
10
下面是高桥的一个可能的计划。
在时间0，开始练习动作1，以便在时间3学习动作1。
然后，在时间3，开始练习动作3，以便在时间10学习动作3。
这里，高桥花了3+7=10分钟来学习第3步，这是最快的速度。
请注意，他不需要学习第2步来学习第3步。

样本输入2
5
1000000000 0
1000000000 0
1000000000 0
1000000000 0
1000000000 4 1 2 3 4

样本输出2
5000000000
注意，答案可能不适合32位整数。
