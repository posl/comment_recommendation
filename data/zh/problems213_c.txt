问题陈述
我们有HW张卡片排列在一个有H行和W列的矩阵中。
对于每张i=1, ..., N的卡片，从上往下第A_i行和从左往下第B_i列的卡片上写有一个数字i。其他的HW-N牌上没有写任何东西。
只要我们能做到，我们就会在这些卡片上重复以下两种操作。
如果有一行没有数字牌，就把这一行的所有牌拿掉，然后把剩下的牌往上移，填补这个空缺。
如果有一列没有号码牌，就把这一列的所有牌移走，然后把剩下的牌向左移，以填补这个缺口。
在上述过程结束后，找出每张数字牌的位置。可以证明，这些位置是唯一确定的，不取决于操作的顺序。

约束条件
1 ≦ H,W ≦ 10^9
1 ≦ N ≦ min(10^5,HW)
1 ≦ A_i ≦ H
1 ≦ B_i ≦ W
所有的对（A_i,B_i）都是独立的。
输入的所有数值都是整数。

输入
输入是由标准输入提供的，格式如下：
H W N
A_1 B_1
.
.
.
A_N B_N

输出
打印N行。
如果在程序结束后，编号为i的卡片位于从上往下的第C_i行和从左往下的第D_i列，那么第i行应该包含C_i和D_i，并在它们之间有一个空格。

输入样本 1
4 5 2
3 2
2 5

样本输出 1
2 1
1 2
让*代表一张没有写任何东西的牌。卡片的初始排列是：
*****
****2
*1***
*****
结束后，它们将被排列如下：
*2
1*
这里，1的卡片位于从上往下第2行，从左边第1列，2的卡片位于从上往下第1行，从左边第2列。

输入样本 2
1000000000 1000000000 10
1 1
10 10
100 100
1000 1000
10000 10000
100000 100000
1000000 1000000
10000000 10000000
100000000 100000000
1000000000 1000000000

样本输出2
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
