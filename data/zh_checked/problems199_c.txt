问题陈述
我们有一个长度为2N的字符串S。
给你Q个关于这个字符串的查询。
在第i个查询中，给定三个整数T_i、A_i和B_i，请做如下处理：
如果T_i=1：交换S的第A_i个和第B_i个字符；
如果T_i = 2：交换S的前N个字符和后N个字符（A_i和B_i的值不使用）。
  例如，如果S是FLIP，这个查询使其成为IPFL。
按照给出的顺序处理完所有的Q查询后，打印出字符串S。

约束条件
1 ≦ N ≦ 2 × 10^5
S是一个长度为2N的字符串，由大写的英文字母组成。
1 ≦ Q ≦ 3 × 10^5
T_i为1或2。
如果T_i = 1，1 ≦ A_i < B_i ≦ 2N。
如果T_i = 2，A_i = B_i = 0。

输入
输入是由标准输入给出的，格式如下：
N
S
Q
T_1 A_1 B_1
T_2 A_2 B_2
T_3 A_3 B_3
.
.
.
T_Q A_Q B_Q

输出
在处理完查询后打印出字符串S。

输入样本 1
2
FLIP
2
2 0 0
1 1 4

样本输出1
LPFI
第1次查询交换了S的前N个字符和后N个字符，使之成为IPFL。
第2次查询交换了S的第1个和第4个字符，使其成为LPFI。  

输入样本2
2
FLIP
6
1 1 3
2 0 0
1 1 2
1 2 3
2 0 0
1 1 4

样本输出2
ILPF
