问题陈述
给你一个H×W的网格。
网格中的方格由H个字符串描述，S_1,...,S_H。
字符串S_i中的第j个字符对应于从上往下第i行和从左往下第j列的方格（1 ≦ i ≦ H,1 ≦ j ≦ W）。
.代表一个空方块，#代表一个包含炸弹的方块。  
Dolphin感兴趣的是有多少个炸弹方块与每个空方块水平、垂直或斜向相邻。
(下面，我们将简单地说 "相邻 "这个意思。对于每个方格，最多只有八个相邻的方格）。
他决定在我们的H字符串中用一个数字代替每个.，这个数字代表与相应的空方块相邻的炸弹方块的数量。  
在这一过程中，打印出字符串。  

限制条件
1 ≦ H,W ≦ 50
S_i是一个长度为W的字符串，由#和...组成。

输入
输入来自标准输入，其格式如下：  
H W
S_1
:
S_H

输出
打印处理后的H字符串。
第i行应该包含一个长度为W的字符串T_i，其中T_i中的第j个字符对应于网格中从上往下第i行和从左往下第j行的方块（1 ≦ i ≦ H, 1 ≦ j ≦ W）。  

输入样本 1
3 5
.....
.#.#.
.....

输出样本1
11211
1#2#1
11211
例如，让我们观察从上往下第一行和从左往右第一列的空方格。
与这个空方格相邻的有一个炸弹方格：位于第二行和第二列的方格。
因此，对应于这个空方格的.被替换为1。

输入样本 2
3 5
#####
#####
#####

输出样本2
#####
#####
#####
有可能不存在空方块。  

输入样本 3
6 6
#####.
#.#.##
####.#
.#..#.
#.##..
#.#...

输出样本3
#####3
#8#7##
####5#
4#65#2
#5##21
#4#310
