#问题陈述
#设comb(n,r)为从n个对象中选择r个对象的方法的数目，不考虑顺序。
#从n个非负整数a_1, a_2, ..., a_n中选择两个数字a_i > a_j，使comb(a_i,a_j)达到最大值。
#如果有多对数字能使数值最大化，则接受其中任何一对。
#
#限制条件
#2 ≦ n ≦ 10^5
#0 ≦ a_i ≦ 10^9
#a_1,a_2,...,a_n是成对的。
#输入的所有数值都是整数。
#
#输入
#输入是由标准输入提供的，格式如下：
#n
#a_1 a_2 ... a_n
#
#输出
#打印你选择的a_i和a_j，中间有一个空格。
#
#输入样本1
#5
#6 9 4 2 11
#
#样本输出1
#11 6
#每个可能的选择的comb(a_i,a_j)如下：
#comb(4,2)=6
#comb(6,2)=15
#comb(6,4)=15
#comb(9,2)=36
#梳子(9,4)=126
#梳子(9,6)=84
#梳子(11,2)=55
#梳子(11,4)=330
#梳子(11,6)=462
#梳子(11,9)=55
#因此，我们应该打印11和6。
#
#输入样本2
#2
#100 0
#
#采样输出2
#100 0

def 