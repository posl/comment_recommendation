#问题陈述
#海豚居住在二维笛卡尔平面内，X轴的正方向指向右边，Y轴的正方向指向上方。
#目前，他位于点（sx,sy）。在每一秒钟，他可以向上、向下、向左或向右移动1的距离。
#这里，每次移动前后的x坐标和y坐标都必须是整数。
#他将首先访问点（tx,ty），其中sx<tx，sy<ty，然后回到点（sx,sy），然后再次访问点（tx,ty），最后回到点（sx,sy）。
#这里，在整个行程中，除了(sx,sy)和(tx,ty)两点外，他不允许多次经过同一点。
#在这个条件下，请为他找到一条最短路径。  
#
#约束条件
#-1000 ≤ sx < tx ≤ 1000
#-1000 ≤ sy < ty ≤ 1000
#sx,sy,tx和ty是整数。
#
#输入
#输入由标准输入提供，格式如下：
#sx sy tx ty
#
#输出
#打印一个字符串S，代表Dolphin的最短路径。
#S中的第i个字符应该对应于他的第i个运动。
#运动的方向应该由以下字符表示：
#U:上
#D: 下
#L：左
#R：右
#如果在该条件下存在多条最短路径，则打印其中任何一条。
#
#输入样本 1
#0 0 1 2
#
#输出样本1
#uurddlluuurrdrdddllu
#一个可能的最短路径是：
#第一次从（sx,sy）到（tx,ty）：（0，0）→（0，1）→（0，2）→（1，2）
#第一次从（tx,ty）到（sx,sy）：（1,2）→（1,1）→（1,0）→（0,0)
#第二次从（sx，sy）到（tx，ty）：（0，0）→（-1，0）→（-1，1）→（-1，2）→（-1，3）→（0，3）→（1，3）→（1，2）
#第二次从（tx,ty）到（sx,sy）：（1,2）→（2,2）→（2,1）→（2,0）→（2,1）→（1,1）→（0,1）→（0,0）
#
#样本输入 2
#-2 -2 1 1
#
#样本输出2
#uurrurrdddlldlluluuurrurdddlldl

def 