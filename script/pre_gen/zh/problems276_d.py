#问题陈述
#给你一个正整数的序列：A=（a_1,a_2,...,a_N）。
#你可以选择并执行下列操作中的任何一次，可能为零。
#选择一个整数i，使得1≦i≦N，并且a_i是2的倍数，然后用((a_i)/(2))替换a_i。
#选择一个整数i，使得1 ≦ i ≦ N并且a_i是3的倍数，用((a_i)/(3))替换a_i。
#你的目标是使A满足a_1=a_2=...=a_N。
#找出你为实现目标而需要进行的操作的最小总次数。如果没有办法实现这个目标，就打印-1代替。
#
#限制条件
#2 ≦ N ≦ 1000
#1 ≦ a_i ≦ 10^9
#输入的所有数值都是整数。
#
#输入
#输入来自标准输入，其格式如下：
#N
#a_1 a_2 ... a_N
#
#輸出
#打印答案。
#
#输入样本 1
#3
#1 4 3
#
#样本输出1
#3
#这里有一个方法可以在三次操作中实现目标，这是最小的需要。
#选择一个整数i=2，使a_i是2的倍数，用（（a_2）/（2））替换a_2。A就变成了（1,2,3）。
#选择一个整数i=2，使得a_i是2的倍数，用((a_2)/(2))替换a_2。A就变成了(1,1,3)。
#选择一个整数i=3，使得a_i是3的倍数，用((a_3)/(3))替换a_3。A变成了(1,1,1)。
#
#输入样本 2
#3
#2 7 6
#
#样本输出2
#-1
#没有办法实现这个目标。
#
#样本输入3
#6
#1 1 1 1 1 1
#
#样本输出 3
#0

def 