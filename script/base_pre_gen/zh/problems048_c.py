#问题陈述
#有N个盒子排成一排。
#最初，从左边开始的第i个盒子里有a_i颗糖果。
#Snuke可以进行以下任意次数的操作：
#选择一个至少含有一颗糖果的盒子，并吃掉所选盒子中的一颗糖果。
#他的目标是这样的：
#任何两个相邻的盒子总共最多含有x颗糖果。
#请找出实现该目标所需的最少操作次数。
#
#限制条件
#2 ≤ N ≤ 10^5
#0 ≤ a_i ≤ 10^9
#0 ≤ x ≤ 10^9
#
#输入
#输入由标准输入提供，格式如下：
#N x
#a_1 a_2 ... a_N
#
#输出
#打印实现目标所需的最小操作数。
#
#输入样本 1
#3 3
#2 2 2
#
#样本输出 1
#1
#吃掉第二个盒子里的一颗糖。
#然后，每个盒子里的糖果数量变成（2，1，2）。
#
#样本输入2
#6 1
#1 6 1 2 0 4
#
#样本输出2
#11
#例如，在第二个盒子里吃六颗糖，第四个盒子里吃两颗，第六个盒子里吃三颗。
#那么，每个盒子里的糖果数量就变成（1，0，1，0，0，1）。
#
#输入样本 3
#5 9
#3 1 4 1 5
#
#样本输出3
#0
#目标已经实现，无需进行操作。
#
#样本输入4
#2 0
#5 5
#
#样本输出4
#10
#所有的糖果都需要被吃掉。

def 