#问题陈述
#有一个长度为N的整数序列A。
#求满足以下条件的整数对l和r（1 ≦ l ≦ r ≦ N）的数目：
#A_l xor A_{l+1} xor ... xor A_r = A_l + A_{l+1} ...+ ...+ A_r
#这里，xor表示比特排他性的OR。
#XOR的定义
#整数c_1, c_2, ..., c_m的XOR定义如下：
#在X的二进制表示中，如果c_1, c_2, ...c_m中存在奇数的整数，其二进制表示在2^k的位置上有1，则2^k的位置上的数字为1，如果该数字为偶数，则0。
#例如，让我们计算3和5的XOR。3的二进制表示是011，5的二进制表示是101，因此XOR的二进制表示是110，也就是说，XOR是6。
#
#约束条件
#1 ≦ N ≦ 2 × 10^5
#0 ≦ A_i < 2^{20}。
#输入的所有数值都是整数。
#
#输入
#输入由标准输入提供，格式如下：
#N
#A_1 A_2 ...A_N
#
#輸出
#打印满足条件的一对整数l和r（1 ≦ l ≦ r ≦ N）的数量。
#
#输入样本 1
#4
#2 5 4 6
#
#样本输出1
#5
#(l,r)=(1,1), (2,2), (3,3), (4,4)显然满足条件。
#(l,r)=(1,2)也满足条件，因为A_1 x or A_2 = A_1 + A_2 = 7。
#没有其他配对满足条件，所以答案是5。
#
#输入样本2
#9
#0 0 0 0 0 0 0 0 0
#
#样本输出2
#45
#
#样本输入3
#19
#885 8 1 128 83 32 256 206 639 16 4 128 689 32 8 64 885 969 1
#
#样本输出3
#37

def 