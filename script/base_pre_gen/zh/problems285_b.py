#问题陈述
#给你一个由小写英文字母组成的长度为N的字符串S。  S的第x个（1≦x≦N）字符是S_x。
#对于每个i=1,2,...,N-1，请找出满足以下所有条件的最大非负整数l：
#l+i ≦ N, 并且
#对于所有整数k，使得1 ≦ k ≦ l，则S_{k}成立。≠S_{k+i}。
#注意，l=0总是满足这些条件。
#
#约束条件
#N是一个整数，使得2 ≦ N ≦ 5000。
#S是一个长度为N的字符串，由小写英文字母组成。
#
#输入
#输入是由标准输入法提供的，格式如下：
#N
#S
#
#输出
#打印（N-1）行。  当i=x时，第x（1 ≦ x < N）行应包含答案的整数。
#
#输入样本 1
#6
#abcbac
#
#样本输出1
#5
#1
#2
#0
#1
#在这个输入中，S= abcbac。  
#当i=1时，我们有S_1≠S_2，S_2≠S_3，...，以及S_5≠S_6，所以最大值为l=5。
#当i=2时，我们有S_1≠S_3，但S_2=S_4，所以最大值为l=1。
#当i=3时，我们有S_1≠S_4，S_2≠S_5，但S_3=S_6，所以最大值为l=2。
#当i=4时，我们有S_1=S_5，所以最大值为l=0。
#当i=5时，我们有S_1≠S_6，所以最大值是l=1。

def 