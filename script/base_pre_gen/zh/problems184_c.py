#问题陈述
#有一个无限的二维网格，我们在(r_1, c_1)方格有一个叫超级龙马的棋子。(龙的意思是龙，马的意思是马）。
#在一步棋中，该棋子可以走到如下所示的一个方格中：
#更正式地说，当超级龙马在(a, b)方格时，它可以走到(c, d)方格，这样至少有一个下列条件成立：
#a + b = c + d
#a - b = c - d
#|a - c| + |b - d| ≦ 3
#求该棋子从(r_1, c_1)到达(r_2, c_2)所需的最少步数。
#
#限制条件
#输入的所有数值都是整数。
#1 ≦ r_1, c_1, r_2, c_2 ≦ 10^9
#
#输入
#输入由标准输入提供，格式如下：
#r_1 c_1
#r_2 c_2
#
#输出
#打印超级龙马从(r_1, c_1)到达(r_2, c_2)所需的最少动作数。
#
#输入样本 1
#1 1
#5 6
#
#样本输出1
#2
#我们需要两步棋--例如，（1，1）->（5，5）->（5，6）。
#
#输入样本 2
#1 1
#1 200001
#
#样本输出2
#2
#我们需要两个动作--例如，（1，1）->（100001，100001）->（1，200001）。
#
#输入样本 3
#2 3
#998244353 998244853
#
#样本输出 3
#3
#我们需要三步棋--例如，（2，3）->（3，3）->（-247，253）->（998244353，998244853）。
#
#输入样本 4
#1 1
#1 1
#
#采样输出4
#0

def 