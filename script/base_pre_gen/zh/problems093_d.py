#问题陈述
#包括Takahashi在内的10^{10^{10}}名参赛者参加了两项编程竞赛。
#在每次比赛中，所有参赛者都有不同的排名，从第一到10^{10^{10}}名。
#参赛者的分数是他/她在两场比赛中的排名的乘积。
#处理以下的Q查询：
#在第i个查询中，给你两个正整数A_i和B_i。假设高桥在第一次比赛中排名A_i-th，在第二次比赛中排名B_i-th，求分数小于高桥的参赛者的最大可能数量。
#
#限制条件
#1 ≦ Q ≦ 100
#1 ≦ A_i,B_i≦ 10^9(1≦ i≦ Q)
#输入的所有数值都是整数。
#
#输入
#输入是由标准输入提供的，格式如下：
#Q
#A_1 B_1
#:
#A_Q B_Q
#
#输出
#对于每个查询，打印出分数小于高桥的参与者的最大可能数量。
#
#输入样本 1
#8
#1 4
#10 5
#3 3
#4 11
#8 9
#22 40
#8 36
#314159265 358979323
#
#样本输出1
#1
#12
#4
#11
#14
#57
#31
#671644785
#让我们把在第一次比赛中排名第x位，在第二次比赛中排名第y位的参赛者表示为（x,y）。
#在第一次查询中，(2,1)是一个可能的候选者，其分数小于高桥的分数。从来没有两个或两个以上的参赛者的分数小于高桥的分数，所以我们应该打印1。

def 