def main():
    N, M = map(int, input().split())
    if M == 0:
        print(0)
        return
    MOD = 10**9+7
    # 隣接リスト
    adj = [[] for _ in range(N+1)]
    for _ in range(M):
        a, b = map(int, input().split())
        adj[a].append(b)
        adj[b].append(a)
    # 隣接リストの各都市の隣接都市の数を数える
    # つまり、隣接都市の数が1の都市は、都市1から都市Nへの経路において、
    # 隣接都市の数が2以上の都市を通る必要がある
    # そのため、隣接都市の数が1の都市を数える
    one_adj = [0] * (N+1)
    for i in range(1, N+1):
        one_adj[i] = len(adj[i]) == 1
    # 都市1から都市Nへの経路の数を数える
    # つまり、隣接都市の数が1の都市を通る経路の数を数える
    # 都市1から都市Nへの経路の数は、都市1から都市Nへの経路の数を数える
    # 都市1から都市Nへの経路の数は、都市1から都市Nへの経路の数を数える
    # 都市1から都市Nへの経路の数は、都市1から都市Nへの経路の数を数える
    # 都市1から都市Nへの経路の数は、都市1から都市Nへの経路の数を数える
    # 都市1から都市Nへの経路の数は、都市1から都市Nへの経路の数を数え

if __name__ == '__main__':
    main()