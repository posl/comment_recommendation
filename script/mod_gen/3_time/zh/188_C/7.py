def findSecondPlayer(N, A):
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    # 1. 生成比赛表
    # 2. 生成比赛结果
    # 3. 找到第二名
    # 4. 输出第二名
    tree = [0 for i in range(2 ** N)]
    for i in range(2 ** N):
        tree[i] = A[i]
    for i in range(N):
        for j in range(2 ** (N - i - 1)):
            if tree[2 * j] > tree[2 * j + 1]:
                tree[j] = tree

if __name__ == '__main__':
    findSecondPlayer()