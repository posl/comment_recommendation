def get_min_spells():
    N = int(input())
    x = []
    y = []
    for i in range(N):
        x_i, y_i = map(int, input().split())
        x.append(x_i)
        y.append(y_i)
    
    # 从x,y中任意取两个点，计算两点的差值，用字典保存，统计出现最多的差值，就是需要的最少的法术数量
    # 两点的差值，就是两点之间的距离，也就是需要的法术数量
    # 差值为0，表示两点重合，可以忽略
    # 差值为1，表示两点在同一条直线上，只需要一个法术
    # 差值为2，表示两点在同一条直线上，只需要一个法术
    # 差值为2，表示两点在同一条直线上，只需要一个法术
    # 差值为3，表示两点在同一条直线上，只需要一个法术
    # 差值为4，表示两点在同一条直线上，只需要一个法术
    # 差值为5，表示两点在同一条直线上，只需要一个法术
    # 差值为6，表示两点在同一条直线上，只需要一个法术
    # 差值为7，表示两点在同一条直线上，只需要一个法术
    # 差值为8，表示两点在同一条直线上，只需要一个法术
    # 差值为9，表示两点在同一条直线上，只需要一个法术
    # 差值为10，表示两点在同一条直线上，只需要一个法术
    # 差值为11，表示两点在同一条直线上，只需要一个法术
    # 差值为12，表示两点在同一条直线上，只需要一个法术
    # 差值

if __name__ == '__main__':
    get_min_spells()