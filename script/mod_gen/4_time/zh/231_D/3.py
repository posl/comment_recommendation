def main():
    N, M = map(int, input().split())
    A = [0] * M
    B = [0] * M
    for i in range(M):
        A[i], B[i] = map(int, input().split())
    # print(A)
    # print(B)
    # print(N)
    # print(M)
    # 1. 建立邻接表
    # 2. 深度优先搜索
    # 3. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    # 4. 如果所有节点都被遍历到了，则返回True
    # 5. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    # 6. 如果所有节点都被遍历到了，则返回True
    # 7. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    # 8. 如果所有节点都被遍历到了，则返回True
    # 9. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    # 10. 如果所有节点都被遍历到了，则返回True
    # 11. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    # 12. 如果所有节点都被遍历到了，则返回True
    # 13. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    # 14. 如果所有节点都被遍历到了，则返回True
    # 15. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    # 16. 如果所有节点都被遍历到了，则返回True
    # 17. 从一个节点开始，遍历所有节点，如果有一个节点没有被遍历到，则返回False
    #

if __name__ == '__main__':
    main()