def main():
    N = int(input())
    A = list(map(int, input().split()))
    #A[i]がi+1でなければ、A[i]をi+1にするために、A[i]の位置までの距離を求める
    #その距離を総和すると、A[i]をi+1にするために必要な最小のブロックの数が求められる
    #これをすべてのA[i]について実行すると、最小のブロックの数が求まる
    #ただし、A[i]がi+1でない場合は、A[i]の位置までの距離が求められないので、
    #その場合は、-1を出力する
    #A[i]がi+1でない場合の最小のブロックの数
    min_block = 0
    #A[i]がi+1でない場合の最小のブロックの数を求める
    for i in range(N):
        if A[i] != i+1:
            min_block += 1
    #A[i]がi+1でない場合の最小のブロックの数がN-1より大きい場合、
    #A[i]がi+1でない場合の最小のブロックの数は求められない
    if min_block > N-1:
        print(-1)
        return
    #A[i]がi+1でない場合の最小のブロックの数を求める
    for i in range(N):
        #A[i]がi+1でない場合
        if A[i] != i+1:
            #A[i]の位置までの距離を求める
            distance = A[i] - i - 1
            #A[i]がi+1でない場合の最小のブロックの数がN-1より大きい場合、
            #A[i]が

if __name__ == '__main__':
    main()