def get_max_sum(N):
    # 1. 从1开始遍历到N，得到最大的余数
    # 2. 从1开始遍历到N，得到次大的余数
    # 3. 从1开始遍历到N，得到第三大的余数
    # 4. 从1开始遍历到N，得到第四大的余数
    # 5. 从1开始遍历到N，得到第五大的余数
    # 6. 从1开始遍历到N，得到第六大的余数
    # 7. 从1开始遍历到N，得到第七大的余数
    # 8. 从1开始遍历到N，得到第八大的余数
    # 9. 从1开始遍历到N，得到第九大的余数
    # 10. 从1开始遍历到N，得到第十大的余数
    # 11. 从1开始遍历到N，得到第十一大的余数
    # 12. 从1开始遍历到N，得到第十二大的余数
    # 13. 从1开始遍历到N，得到第十三大的余数
    # 14. 从1开始遍历到N，得到第十四大的余数
    # 15. 从1开始遍历到N，得到第十五大的余数
    # 16. 从1开始遍历到N，得到第十六大的余数
    # 17. 从1开始遍历到N，得到第十七大的余数
    # 18. 从1开始遍历到N，得到第十八大的余数
    # 19. 从1开始遍历到N，得到第十九大的余数
    # 20. 从1开始遍历到N，得到第二十大的余数

if __name__ == '__main__':
    get_max_sum()