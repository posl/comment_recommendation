def get_kth_smallest_integer(A, K):
    #A.sort()
    #A = sorted(A)
    #print(A)
    #print(K)
    #print(len(A))
    #print(K % len(A))
    #print(A[K % len(A)])
    #print(K // len(A))
    #print(A[K // len(A)])
    #print(A[K // len(A)] + K % len(A))
    #print(A[K // len(A)] + K % len(A) - 1)
    #print(A[K // len(A)] + K % len(A) - 2)
    #print(A[K // len(A)] + K % len(A) - 3)
    #print(A[K // len(A)] + K % len(A) - 4)
    #print(A[K // len(A)] + K % len(A) - 5)
    #print(A[K // len(A)] + K % len(A) - 6)
    #print(A[K // len(A)] + K % len(A) - 7)
    #print(A[K // len(A)] + K % len(A) - 8)
    #print(A[K // len(A)] + K % len(A) - 9)
    #print(A[K // len(A)] + K % len(A) - 10)
    #print(A[K // len(A)] + K % len(A) - 11)
    #print(A[K // len(A)] + K % len(A) - 12)
    #print(A[K // len(A)] + K % len(A) - 13)
    #print(A[K // len(A)] + K % len(A) - 14)
    #print(A[K // len(A)] + K % len(A) - 15)
    #print(A[K // len(A)] + K % len(A) - 16)
    #print(A[K // len(A)] + K % len(A) - 17)
    #print(A[K // len(A)] + K % len(A) - 18)
    #print(A[K // len(A)] + K % len(A) - 19)
    #print(A[K // len(A)] + K % len(A) - 20)
    #print(A[K // len(A)] + K % len(A) - 21)
    #print(A[K // len(A)] + K % len(A

if __name__ == '__main__':
    get_kth_smallest_integer()