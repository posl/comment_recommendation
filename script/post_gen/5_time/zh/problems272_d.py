#问题陈述
#有一个有N×N个方格的网格。  我们用(i, j)表示位于从上往下第i行和从左往下第j列的方格。
#最初，一个棋子被放在（1，1）上。  你可以重复以下的操作，次数不限：
#设(i, j)为棋子目前所处的方格。  将棋子移到与(i, j)的距离正好是(M)^(1/2)的那个方格。
#在这里，我们将方格（i，j）和方格（k，l）之间的距离定义为（（i-k）^2+（j-l）^2）^（1/2）。
#对于所有的方格（i，j），确定棋子是否可以到达（i，j）。  如果可以，请找出这样做所需的最小操作数。
#
#限制条件
#1 ≦ N ≦ 400
#1 ≦ M ≦ 10^6
#输入的所有数值都是整数。
#
#输入
#输入是由标准输入法提供的，其格式如下：
#N M
#
#输出
#打印N行。  第i行应该包含N个整数。  如果这块能达到(i, j)，第i行中的第j个整数应该是所需的最小操作数；否则，它应该是-1。
#
#输入样本 1
#3 1
#
#样本输出 1
#0 1 2
#1 2 3
#2 3 4
#你可以将棋子移动到四个相邻的位置。
#例如，我们可以通过以下两个操作将棋子移动到（2,2）。
#棋子现在在(1,1)上。(1,1)和(1,2)之间的距离正好是(1)^(1/2)，所以将棋子移到(1,2)。
#棋子现在在(1,2)上。(1,2)和(2,2)之间的距离正好是(1)^(1/2)，所以把棋子移到(2,2)。
#
#输入样本 2
#10 5
#
#输出样本 2
#0 3 2 3 2 3 4 5 4 5
#3 4 1 2 3 4 3 4 5 6
#2 1 4 3 2 3 4 5 4 5
#3 2 3 2 3 4 3 4 5 6
#2 3 2 3 4 3 4 5 4 5
#3 4 3 4 3 4 5 4 5 6
#4 3 4 3 4 5 4 5 6 5
#5 4 5 4 5 4 5 6 5 6
#4 5 4 5 4 5 6 5 6 7
#5 6 5 6 5 6 5 6 7 6

def 