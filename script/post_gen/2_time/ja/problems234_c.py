Synthesizing 10/10 solutions (Duplicates hidden)

=======
Suggestion 1

def main():
    K = int(input())
    # 10進法で表記したときに 0,2 のみからなる正整数のうち、 K 番目に小さいものを求めてください。
    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=3 番目である 22 を出力してください。
    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=3 番目である 22 を出力してください。
    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=3 番目である 22 を出力してください。
    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=3 番目である 22 を出力してください。
    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=3 番目である 22 を出力してください。
    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=3 番目である 22 を出力してください。
    #

=======
Suggestion 2

def main():
    K = int(input())
    # 10進法で表記したときに 0,2 のみからなる正整数のうち、 K 番目に小さいものを求めてください。
    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=3 番目である 22 を出力してください。

    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=11 番目である 2022 を出力してください。

    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=923423423420220108 番目である 220022020000202020002022022000002020002222002200002022002200
    # たとえ答えが大きな整数であっても、求める答えを正確に整数として出力する必要があることに注意してください。

    # 10進法で表記した時に 0,2 のみからなる正整数を小さい方から並べると、 2,20,22,... となります。
    # このうち K=923423423420220108 番目である 220022020000202020002022022000002020002222002200002022002200
    # たとえ答えが大きな整数であっても、求める答えを正確に整数として出力する必要があることに注意してください。

    # 10進法で表記した

=======
Suggestion 3

def main():
    K = int(input())
    # 2進数に変換
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 2進数に変換
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 2進数に変換
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 2進数に変換
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 2進数に変換
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 2進数に変換
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 2進数に変換
    # 0,2のみからなる正整数のうち、K番目に小さいものを求める
    # 0,2のみからなる正整数のうち、K番目に小さいものを求め

=======
Suggestion 4

def solve():
    K = int(input())
    ans = 0
    for i in range(1, 64):
        for j in range(1, 64):
            if i+j-1 > 60:
                break
            if K == 0:
                break
            ans += 2**(i+j-1) * 2**i * (K%2)
            K //= 2
    print(ans)

=======
Suggestion 5

def main():
    K = int(input())
    ans = 0
    print(ans)

=======
Suggestion 6

def solve(N):
    # 1桁目
    ans = 0
    n = 1
    while True:
        if N <= n:
            ans += N
            break
        ans += n
        N -= n
        n *= 2

    # 2桁目以降
    n = 1
    while True:
        if N <= n:
            ans += N * 10
            break
        ans += n * 10
        N -= n
        n *= 2

    return ans

=======
Suggestion 7

def main():
    K = int(input())
    print("{}".format(K))

=======
Suggestion 8

def main():
    K = int(input())
    print(Kth_binary(K))

=======
Suggestion 9

def main():
    K = int(input())
    print(N(0, K))
