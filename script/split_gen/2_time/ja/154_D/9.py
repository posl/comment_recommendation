def main():
    N, K = map(int, input().split())
    p = list(map(int, input().split()))
    
    # 期待値を求める
    # 1からp[i]までのp[i]種類の目がそれぞれ等確率で出るので、
    # 期待値は(1+p[i])/2
    # つまり、期待値を求めるためには、1からp[i]までの和を求める必要がある。
    # これを累積和を用いて求める。
    for i in range(N):
        p[i] = (1+p[i]) / 2
    #print(p)
    # 累積和を求める
    for i in range(1, N):
        p[i] += p[i-1]
    #print(p)
    
    # 最大値を求める
    # 隣接するK個のサイコロを選んでそれぞれ独立に振ったとき、出る目の合計の期待値の最大値を求めるので、
    # K個のサイコロを選んでそれぞれ独立に振ったときの最大値を求める。
    # つまり、隣接するK個のサイコロを選んでそれぞれ独立に振ったときの最大値を求める。
    # つまり、隣接するK個のサイコロを選んでそれぞれ独立に振ったときの最大値を求める。
    # つまり、隣接するK個のサイコロを選んでそれぞれ独立に振ったときの最大値を求める。
    # つまり、隣接するK個のサイコロを選んでそれぞれ独
