def main():
    N, X, Y = map(int, input().split())
    X -= 1
    Y -= 1
    # 隣接リスト
    adj = [[] for _ in range(N)]
    for _ in range(N-1):
        u, v = map(int, input().split())
        u -= 1
        v -= 1
        adj[u].append(v)
        adj[v].append(u)
    # 頂点 x から頂点 y への単純パスを求める
    # 木のため、単純パスはただ一つ存在することが証明できる
    # 木上の任意の相異なる 2 頂点 a,b について、a から b への単純パスがただ一つ存在することが証明できます。
    # 頂点 x から頂点 y への単純パス上の頂点（端点含む）を順に列挙する
    # 頂点 x から頂点 y への単純パスを求める
    # 木のため、単純パスはただ一つ存在することが証明できる
    # 木上の任意の相異なる 2 頂点 a,b について、a から b への単純パスがただ一つ存在することが証明できます。
    # 頂点 x から頂点 y への単純パス上の頂点（端点含む）を順に列挙する
    # 頂点 x から頂点 y への単純パスを求める
    # 木のため、単純パスはただ一つ存在することが証明できる
    # 木上の任意の相異なる 2 頂点 a,b について、
