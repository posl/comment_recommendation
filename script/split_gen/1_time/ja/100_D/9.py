def main():
    N, M = map(int, input().split())
    # この問題では、綺麗さ、おいしさ、人気度の順にソートすると、
    # 綺麗さは降順、おいしさは昇順、人気度は降順になる。
    # したがって、綺麗さの最大値は、最大の M 個の綺麗さの合計となる。
    # おいしさの最大値は、最小の M 個のおいしさの合計となる。
    # 人気度の最大値は、最大の M 個の人気度の合計となる。
    # したがって、綺麗さ、おいしさ、人気度の合計の最大値は、
    # max(綺麗さの合計) + min(おいしさの合計) + max(人気度の合計) となる。
    # これを全ての組み合わせについて計算すると、計算量が O(N^3) となってしまう。
    # しかし、綺麗さ、おいしさ、人気度の順にソートしたとき、
    # それぞれの要素を固定して、残りの要素の合計を計算することで、
    # それぞれの合計の最大値を O(N^2) で求めることができる。
    # したがって、全体の計算量は O(N^2) となる。
    # また、綺麗さ、おいしさ、人気度の順にソートすると、
    # 綺麗さは降順、おいしさは昇順、人気度は降順にな
