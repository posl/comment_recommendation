def solve():
    N, M = map(int, input().split())
    A = []
    B = []
    for i in range(M):
        a, b = map(int, input().split())
        A.append(a)
        B.append(b)
    # 模拟
    # 人数为N，从1到N编号
    # 每次取出一个A_i,B_i，将其放在最左边或者最右边
    # 判断是否满足条件，不满足则返回No，满足则继续取下一个
    # 重复M次，若没有返回No，则返回Yes
    # 时间复杂度为O(MN)
    # 优化：使用集合存储每次的A_i,B_i，判断是否满足条件时，只需判断集合中是否存在A_i或B_i即可
    # 时间复杂度为O(M)
    # 优化：使用集合存储每次的A_i,B_i，判断是否满足条件时，只需判断集合中是否存在A_i或B_i即可
    # 时间复杂度为O(M)
    # 优化：使用集合存储每次的A_i,B_i，判断是否满足条件时，只需判断集合中是否存在A_i或B_i即可
    # 时间复杂度为O(M)
    # 优化：使用集合存储每次的A_i,B_i，判断是否满足条件时，只需判断集合中是否存在A_i或B_i即可
    # 时间复杂度为O(M)
    # 优化：使用集合存储每次的A_i,B_i，判断是否满足条件时，只需判断集合中是否存在A_i或B_i即可
    # 时间复杂度为O(M)
    # 优化：使用集合存储每次的A_i,B_i，判断是否满足条件时，只需判断集合中是否存在A_i
