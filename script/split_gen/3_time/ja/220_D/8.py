def main():
    N = int(input())
    A = list(map(int, input().split()))
    MOD = 998244353
    # 操作 F で出てくる数の出現回数を数える
    F_cnt = [0] * 10
    for i in range(N):
        F_cnt[(A[i] + A[i + 1]) % 10] += 1
    # 操作 G で出てくる数の出現回数を数える
    G_cnt = [0] * 10
    for i in range(N):
        G_cnt[(A[i] * A[i + 1]) % 10] += 1
    # 最終的に残る値が K となる操作手順は何通りあるか
    # まず、操作 F と操作 G の組み合わせを考える
    # 操作 F と操作 G は独立なので、
    # F が i 回、G が j 回（i+j=N-1）出てくる組み合わせは
    # (N-1)C(i) = (N-1)! / (i! * (N-1-i)!) 通りある
    # また、操作 F と操作 G はどちらも 2^{N-1} 通りあるので、
    # 最終的に残る値が K となる操作手順は
    # (N-1)C(i) * 2^{N-1} * 2^{N-1} = (N-1)! / (i! * (N-1-i)!) * 2^{2N-2} 通りある
    # 以上より、最終的に残る値が K となる操作手順は
    # (N-1)! / (i! * (N-1-i)!) * 2^{2N-2} * F_cnt[K] * G_cnt[K] 通りある
    # ただし、i=0 かつ j=0
