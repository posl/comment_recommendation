def main():
    N, X, Y = map(int, input().split())
    X -= 1
    Y -= 1
    # 隣接リスト
    adj = [[] for _ in range(N)]
    for _ in range(N-1):
        u, v = map(int, input().split())
        u -= 1
        v -= 1
        adj[u].append(v)
        adj[v].append(u)
    # 幅優先探索
    # 頂点 X から頂点 Y への単純パス上の頂点を順に列挙して返す
    def bfs(X, Y):
        # X から Y への単純パス上の頂点を順に列挙する
        # ただし、X から Y への単純パスが存在しない場合は None を返す
        # 頂点 X から頂点 Y への単純パス上の頂点を順に列挙する
        # ただし、X から Y への単純パスが存在しない場合は None を返す
        # 幅優先探索で X から Y への単純パス上の頂点を順に列挙する
        # 頂点 X から頂点 Y への単純パスが存在しない場合は None を返す
        # 頂点 X から頂点 Y への単純パスが存在する場合は、
        # 頂点 X から頂点 Y への単純パス上の頂点を順に列挙したリストを返す
        # 幅優先探索
        # 頂点 X から頂点 Y への単純パス上の頂点を順に列挙して返す
        # 頂点 X から
