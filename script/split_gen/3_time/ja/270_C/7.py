def main():
    N, X, Y = map(int, input().split())
    # 頂点番号を 0 から N-1 に変換する
    X -= 1
    Y -= 1
    # 隣接リスト
    adj = [[] for _ in range(N)]
    for _ in range(N-1):
        u, v = map(int, input().split())
        u -= 1
        v -= 1
        adj[u].append(v)
        adj[v].append(u)
    # X から Y への単純パスを列挙する
    # まず、X から Y へのパスを列挙する
    # この時、隣接する頂点のうち、X よりも Y に近い方を選ぶ
    # この時、X から Y へのパスは必ず単純パスになる
    # 例えば、X から Y へのパスが X -> a -> b -> Y となっているとする
    # この時、a よりも Y に近い方の頂点を選ぶと、X -> b -> Y となる
    # この時、X -> Y のパスが存在するので、X -> b -> Y は単純パスにならない
    # したがって、X から Y へのパスは必ず単純パスになる
    # また、X よりも Y に近い方の頂点は、X から Y へのパス上に存在する
    # したがって、X から Y へのパスは単純パスになる
    # したがって、X から Y への単純パスは、X から Y へのパスになる
    # つまり、X から Y へのパスのうち、X よりも Y に近い
