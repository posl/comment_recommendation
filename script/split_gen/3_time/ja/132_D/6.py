def main():
    N, K = map(int, input().split())
    MOD = 10**9+7
    # N個のうちK個を選ぶ組み合わせの数を求める
    # 1からNまでの数値があるとき、N個のうちK個を選ぶ組み合わせの数はN!/(K!*(N-K)!)となる
    # ただし、N!はNの階乗、K!はKの階乗
    # ここで、階乗を求める際は、数値の大きさによっては計算量が膨大になるため、
    # 逆元を用いて計算する
    # 逆元とは、計算機上での計算を行うための数学的な手法
    # 例えば、a*b=cとなるようなaとbがあるとき、cが求まっている場合は、
    # 逆元を用いてaを求めることができる
    # 逆元を求めるためには、フェルマーの小定理を利用する
    # フェルマーの小定理とは、
    # aとpが互いに素であるとき、aのp乗はaをpで割った余りと等しい
    # また、aの逆元はaのp-2乗と等しい
    # このことを利用して、階乗を求める際に逆元を用いることで、
    # 階乗を求める計算量を軽減できる
    # なお、逆元は、フェルマーの小定理のp-2乗の部分を計算する際に
    # べき乗の計算を行う必
