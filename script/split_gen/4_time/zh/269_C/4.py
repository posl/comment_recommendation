def main():
    n = int(input())
    #n = 576461302059761664
    #print(n)
    #print(bin(n))
    #print(bin(n).count('1'))
    #print(bin(n).count('1') <= 15)
    #print(2**60)
    #print(2**60 > n)
    if bin(n).count('1') <= 15 and 2**60 > n:
        #print('ok')
        #print('n的二进制表示中包含1的数字位置集是N的二进制表示中包含1的数字位置集的一个子集')
        #print('n的二进制表示中包含1的数字位置集')
        #print(bin(n))
        #print('N的二进制表示中包含1的数字位置集')
        #print(bin(n))
        #print('N的二进制表示中包含1的数字位置集的一个子集')
        #print(bin(n))
        #x的二进制表示中包含1的数字位置集是N的二进制表示中包含1的数字位置集的一个子集
        #print('对于每一个非负整数k，以下情况都成立：如果x的 "2^ks "位上的数字是1，N的2^ks位上的数字也是1')
        #print('如果x的 "2^ks "位上的数字是1，N的2^ks位上的数字也是1')
        #print('x的二进制表示中包含1的数字位置集')
        #print(bin(n))
        #print('N的二进制表示中包含1的数字位置集')
        #print(bin(n))
        #print('如果x的 "2^ks "位上的数字是1，N的2^ks位上的数字也是1')
        #print('x的二进制表示中包含1的数字位置集')
        #print(bin(n))
        #print('N的二进制表示中包含1的数字位置集')
        #print(bin(n))
        #print('如果x的 "2^ks "位上的数字是1，N的2^ks位上的数字也是1')
