def main():
    N, M = map(int, input().split())
    if M == 1:
        for i in range(N):
            for j in range(N):
                print(i+j)
            print()
        return
    # 1 から M までの平方数を求める
    # 1 は除く
    squares = []
    for i in range(2, M + 1):
        if i * i > M:
            break
        squares.append(i * i)
    # 各マスの最小手数を求める
    # 各マスは 1 から 2 * N - 1 までの手数で到達可能
    # ただし、マス (1, 1) は 0 手で到達可能
    # 到達不可能な場合は -1
    # マス (i, j) からマス (k, l) への距離は ((i-k)^2+(j-l)^2)^(1/2)
    # これは (i-k)^2+(j-l)^2 と等しい
    # ここで (i-k)^2+(j-l)^2 はマンハッタン距離の 2 乗
    # つまり、マンハッタン距離を 2 乗したものが平方数であれば到達可能
    # 平方数の最小のものが最小手数
    # ただし、マンハッタン距離が 0 の場合は 0 手で到達可能とする
    # また、マンハッタン距離が 0 でないのに平方数でない場合は -1 とする
    # ただし、マンハッタン距離が 0 でないのに平方数でない場合は -1 とする
    # これは、平方数でない場合は平方数である場所を経由して
