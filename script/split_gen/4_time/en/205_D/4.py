def main():
    N, Q = map(int, input().split())
    A = list(map(int, input().split()))
    K = [int(input()) for _ in range(Q)]
    # 1, 2, 4, 8, 9, 10, 11, ...のうち、A[i]との差が最小のものを求める
    # ある数xとA[i]との差がdであるとき、xはA[i] + 2^k * dの形になる
    # つまり、A[i] + 2^k * dを求めることで、A[i]との差が最小のものを求めることができる
    # ただし、A[i] + 2^k * dがA[i]よりも大きくなるようなkを求める必要がある
    # このとき、kはA[i]とA[i+1]の差の2進数表現の桁数に等しい
    # 例えば、A[i] = 3, A[i+1] = 5のとき、k = 1となる
    # このとき、A[i] + 2^k * dはA[i+1]を超えるため、A[i]との差が最小のものはA[i] + 2^k * dではなく、A[i] + 2^k * d - 2^k = A[i+1]となる
    # このようにして、A[i]との差が最小のものを求めることができる
    # これをA[i]とA[i+1]の間にあるすべての数に対して行うと、A[i]との差が最小のものの集合を求めることができる
    # この集合をSとすると、Sは1, 2, 4, 8, 9, 10, 11, ...の
