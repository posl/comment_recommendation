def solve(n, a, b, s):
    # 定义dp[i][j]为前i个字符，变为回文，最少需要花费的钱数
    # 有两种情况：
    # 1. 第i个字符不需要替换，即s[i] == s[n-i-1]
    # 2. 第i个字符需要替换，即s[i] != s[n-i-1]
    # 对于第一种情况，dp[i][j] = dp[i-1][j]
    # 对于第二种情况，dp[i][j] = dp[i-1][j] + a
    # 此外，还需要考虑第i个字符需要替换，但是第n-i-1个字符不需要替换的情况
    # dp[i][j] = min(dp[i][j], dp[i-1][j-1] + a)
    # 初始条件：
    # dp[0][0] = 0
    # dp[0][1] = a
    # dp[1][0] = a
    # dp[1][1] = 0
    # dp[1][2] = a
    # dp[2][0] = a*2
    # dp[2][1] = a
    # dp[2][2] = 0
    # dp[2][3] = a
    # dp[3][0] = a*3
    # dp[3][1] = a*2
    # dp[3][2] = a
    # dp[3][3] = 0
    # dp[3][4] = a
    # dp[4][0] = a*4
    # dp[4][1] = a*3
    # dp[4][2] = a*2
    # dp[4][3] = a
    # dp[4][4] = 0
    # dp[4][5] = a
    # dp[5][0] = a*5
    # dp[5][1] = a*4
    # dp[5][2] = a*3
