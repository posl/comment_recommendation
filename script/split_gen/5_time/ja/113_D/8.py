def main():
    # 標準入力の取得
    H, W, K = map(int, input().split())
    # 処理
    # 答えを 1 000 000 007 で割った余りを出力すること.
    # 1 000 000 007 は素数なので、フェルマーの小定理より、
    # 1 000 000 007 で割った余りを求めるには、
    # 逆元を使って、a / b を a * b^-1 として計算することで求めることができる.
    # 逆元は、フェルマーの小定理より、
    # a * a^-1 ≡ 1 (mod p) となる a^-1 が存在する.
    # この a^-1 を a の逆元と呼び、a^-1 ≡ a^(p-2) (mod p) として求めることができる.
    # この a^-1 を求めるには、繰り返し二乗法を用いて、
    # a^(p-2) ≡ a^(p-2) mod p を求めれば良い.
    # 逆元を求めるには、拡張ユークリッドの互除法を用いて、
    # a * x + p * y = 1 を満たす x を求めれば良い.
    # 拡張ユークリッドの互除法を用いると、
    # a * x + p * y = 1 を満たす x と y を求めることができる.
    # この x が a の逆元となる.
    # 逆元の求め方は、以下のようになる.
    # 1. a * x + p * y = 1 を満たす x と y を求める.
    #
