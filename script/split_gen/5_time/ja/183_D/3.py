def main():
    N, W = map(int, input().split())
    S = [0] * N
    T = [0] * N
    P = [0] * N
    for i in range(N):
        S[i], T[i], P[i] = map(int, input().split())
    #print(N, W)
    #print(S)
    #print(T)
    #print(P)
    # 0 <= S[i] < T[i] <= 2 * 10^5
    # 1 <= W, P[i] <= 10^9
    # 1 <= N <= 2 * 10^5
    # 入力はすべて整数
    # 1 <= N <= 2 * 10^5 なので、配列を用いた場合、
    # 2 * 10^5 * 2 * 10^5 = 4 * 10^10 となり、メモリが不足する。
    # そこで、座標圧縮を用いる。
    # 0 <= S[i] < T[i] <= 2 * 10^5 なので、
    # 0 <= S[i] < T[i] <= 2 * 10^5 の範囲にある値のみを
    # 配列に格納するようにする。
    # また、時刻 0 から 2 * 10^5 までの間にお湯を使う人がいるかどうかを
    # 記録する配列を用意する。
    # まず、時刻 0 から 2 * 10^5 までの間にお湯を使う人がいるかどうかを
    # 記録する配列を用意する。
    # 0 <= S[i] < T[i] <= 2 * 10^5 なので、
    # 2 * 10^5 + 1 個の要素を持つ配列を用意する。
    # この配列を A とする。A
