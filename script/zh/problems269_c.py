#问题陈述
#给你一个非负整数N，按升序打印所有满足下列条件的非负整数x。
#x的二进制表示中包含1的数字位置集是N的二进制表示中包含1的数字位置集的一个子集。
#也就是说，对于每一个非负整数k，以下情况都成立：如果x的 "2^ks "位上的数字是1，N的2^ks位上的数字也是1。
#
#
#约束条件
#N是一个整数。
#0 ≦ N < 2^{60}
#在N的二进制表示中，最多只有15个数字位置包含1。
#
#输入
#输入是由标准输入的，格式如下：
#N
#
#输出
#以升序排列的十进制整数打印答案，每个答案都在自己的行中。
#
#输入样本1
#11
#
#输出样本1
#0
#1
#2
#3
#8
#9
#10
#11
#N=11_{(10)}的二进制表示是1011_{(2)}。
#满足条件的非负整数x是：
#0000_{(2)}=0_{(10)}
#0001_{(2)}=1_{(10)}
#0010_{(2)}=2_{(10)}
#0011_{(2)}=3_{(10)}
#1000_{(2)}=8_{(10)}
#1001_{(2)}=9_{(10)}
#1010_{(2)}=10_{(10)}
#1011_{(2)}=11_{(10)}
#
#样本输入2
#0
#
#采样输出2
#0
#
#样本输入3
#576461302059761664
#
#样本输出3
#0
#524288
#549755813888
#549756338176
#576460752303423488
#576460752303947776
#576461302059237376
#576461302059761664
#输入可能不适合32位有符号整数。

def 