#问题陈述
#给你两个长度为N的整数序列：a_1, ..., a_N和b_1, ..., b_N。
#有N^2种方法可以选择两个整数i和j，使得1 ≦ i, j ≦ N. 对于这N^2对中的每一对，我们将计算出a_i + b_j并写在一张纸上。
#也就是说，我们将总共写出N^2个整数。
#计算这N^2个整数的XOR。
#XOR的定义
#整数c_1, c_2, ..., c_m的XOR定义如下：
#在X的二进制表示中，如果c_1, c_2, ...c_m中存在奇数的整数，其二进制表示在2^k的位置上有1，则2^k位置上的数字为1，如果该数字为偶数则为0。
#例如，让我们计算3和5的XOR。3的二进制表示是011，5的二进制表示是101，因此XOR的二进制表示是110，也就是说，XOR是6。
#
#限制条件
#所有的输入值都是整数。
#1 ≦ N ≦ 200,000
#0 ≦ a_i, b_i < 2^{28}.
#
#输入
#输入是由标准输入提供的，格式如下：
#N
#a_1 a_2 ... a_N
#b_1 b_2 ... b_N
#
#输出
#打印计算的结果。
#
#输入样本 1
#2
#1 2
#3 4
#
#样本输出 1
#2
#在这张表上，将写上以下四个整数：4(1+3), 5(1+4), 5(2+3)和6(2+4)。
#
#样本输入2
#6
#4 6 0 0 3 3
#0 5 6 5 0 3
#
#样本输出2
#8
#
#样本输入3
#5
#1 2 3 4 5
#1 2 3 4 5
#
#样本输出 3
#2
#
#样本输入4
#1
#0
#0
#
#采样输出4
#0

def 