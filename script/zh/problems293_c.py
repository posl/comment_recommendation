#问题陈述
#有一个网格，有H个水平行和W个垂直列。
#对于两个整数i和j，使得1 ≦ i ≦ H和1 ≦ j ≦ W、
#从上往下第i行和从左往下第j列的方格（我们用(i, j)表示）上有一个整数A_{i, j}。
#高桥目前在（1,1）。
#从现在开始，他重复移动到他当前位置右侧或下方的相邻位置，直到他到达（H，W）。
#当他下棋时，不允许他走到网格之外。
#如果他所访问的方格（包括最初的（1，1）和最后的（H，W））上写的整数是不同的，高桥会很高兴。
#找出他可能的路径中能使他高兴的数目。
#
#限制条件
#2 ≦ H, W ≦ 10
#1 ≦ A_{i, j} ≦ 10^9
#输入的所有数值都是整数。
#
#输入
#输入来自标准输入，格式如下：
#H W
#A_{1, 1} A_{1, 2} ...A_{1, W}
#A_{2, 1} A_{2, 2} ...A_{2, W}
#.
#.
#.
#A_{H, 1} A_{H, 2} ...A_{H, W}
#
#输出
#打印答案。
#
#输入样本 1
#3 3
#3 2 2
#2 1 3
#1 5 4
#
#样本输出1
#3
#有六条可能的路径：
#(1, 1) -> (1, 2) -> (1, 3) -> (2, 3) -> (3, 3)：他访问的方格上的整数是3, 2, 2, 3, 4，所以他不会高兴。
#(1, 1) -> (1, 2) -> (2, 2) -> (2, 3) -> (3, 3)：他访问的方格上写的整数是3, 2, 1, 3, 4，所以他不会高兴。
#(1, 1) -> (1, 2) -> (2, 2) -> (3, 2) -> (3, 3)：他访问的方格上写的整数是3, 2, 1, 5, 4，所以他将会很高兴。
#(1, 1) -> (2, 1) -> (2, 2) -> (2, 3) -> (3, 3)：他访问的方格上写的整数是3, 2, 1, 3, 4，所以他不会高兴。
#(1, 1) -> (2, 1) -> (2, 2) -> (3, 2) -> (3, 3)：他访问的方格上写的整数是3, 2, 1, 5, 4，所以他将会很高兴。
#(1, 1) -> (2, 1) -> (3, 1) -> (3, 2) -> (3, 3)：他访问的方格上写的整数是3, 2, 1, 5, 4，所以他将会很高兴。
#因此，上面描述的第三、第五和第六条路径使他快乐。
#
#输入样本2
#10 10
#1 2 3 4 5 6 7 8 9 10
#11 12 13 14 15 16 17 18 19 20
#21 22 23 24 25 26 27 28 29 30
#31 32 33 34 35 36 37 38 39 40
#41 42 43 44 45 46 47 48 49 50
#51 52 53 54 55 56 57 58 59 60
#61 62 63 64 65 66 67 68 69 70
#71 72 73 74 75 76 77 78 79 80
#81 82 83 84 85 86 87 88 89 90
#91 92 93 94 95 96 97 98 99 100
#
#样本输出2
#48620
#在这个例子中，每条可能的路径都让他感到高兴。

def 